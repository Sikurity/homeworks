; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\Develop\HW\leeysos\leeysos.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BB@CINOICC@Booting?5Error?$CB?$AN?6?$AA@	; `string'
PUBLIC	??_C@_0CG@ENNLIACI@Floppy?5Disk?5Driver?5is?5initialize@ ; `string'
PUBLIC	??_C@_0CL@LECLFJDL@FddInitializeDriver?$CI?$CJ?5returned?5a@ ; `string'
PUBLIC	??_C@_0CC@DFCKDFA@Keyboard?5Driver?5is?5initialized?$CB?$CB@ ; `string'
PUBLIC	??_C@_0CL@BBHNNJJA@KbdInitializeDriver?$CI?$CJ?5returned?5a@ ; `string'
PUBLIC	??_C@_0CL@EKIIKDMP@KrnInitializeKernel?$CI?$CJ?5returned?5a@ ; `string'
PUBLIC	_leeysos_init
EXTRN	_PspCreateUserProcess:PROC
EXTRN	_FddInitializeDriver:PROC
EXTRN	_CrtPrintf:PROC
EXTRN	_KbdInitializeDriver:PROC
EXTRN	_KrnInitializeKernel:PROC
EXTRN	_CrtInitializeDriver:PROC
;	COMDAT ??_C@_0BB@CINOICC@Booting?5Error?$CB?$AN?6?$AA@
; File c:\develop\hw\leeysos\leeysos.c
CONST	SEGMENT
??_C@_0BB@CINOICC@Booting?5Error?$CB?$AN?6?$AA@ DB 'Booting Error!', 0dH, 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ENNLIACI@Floppy?5Disk?5Driver?5is?5initialize@
CONST	SEGMENT
??_C@_0CG@ENNLIACI@Floppy?5Disk?5Driver?5is?5initialize@ DB 'Floppy Disk '
	DB	'Driver is initialized!!', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LECLFJDL@FddInitializeDriver?$CI?$CJ?5returned?5a@
CONST	SEGMENT
??_C@_0CL@LECLFJDL@FddInitializeDriver?$CI?$CJ?5returned?5a@ DB 'FddIniti'
	DB	'alizeDriver() returned an error.', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DFCKDFA@Keyboard?5Driver?5is?5initialized?$CB?$CB@
CONST	SEGMENT
??_C@_0CC@DFCKDFA@Keyboard?5Driver?5is?5initialized?$CB?$CB@ DB 'Keyboard'
	DB	' Driver is initialized!! ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@BBHNNJJA@KbdInitializeDriver?$CI?$CJ?5returned?5a@
CONST	SEGMENT
??_C@_0CL@BBHNNJJA@KbdInitializeDriver?$CI?$CJ?5returned?5a@ DB 'KbdIniti'
	DB	'alizeDriver() returned an error.', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EKIIKDMP@KrnInitializeKernel?$CI?$CJ?5returned?5a@
CONST	SEGMENT
??_C@_0CL@EKIIKDMP@KrnInitializeKernel?$CI?$CJ?5returned?5a@ DB 'KrnIniti'
	DB	'alizeKernel() returned an error.', 0dH, 0aH, 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT _leeysos_init
_TEXT	SEGMENT
_leeysos_init PROC					; COMDAT

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 12   : 	// 콘솔 시스템 초기화 함수 호출
; 13   : 	if( !CrtInitializeDriver() )

  00009	e8 00 00 00 00	 call	 _CrtInitializeDriver
  0000e	85 c0		 test	 eax, eax
  00010	75 0a		 jne	 SHORT $LN4@leeysos_in

; 14   : 		halt(NULL);

  00012	6a 00		 push	 0
  00014	e8 00 00 00 00	 call	 _halt
  00019	83 c4 04	 add	 esp, 4
$LN4@leeysos_in:

; 15   : 
; 16   : 	// 커널 초기화 루틴의 호출
; 17   : 	if( !KrnInitializeKernel() )

  0001c	e8 00 00 00 00	 call	 _KrnInitializeKernel
  00021	85 c0		 test	 eax, eax
  00023	75 0d		 jne	 SHORT $LN3@leeysos_in

; 18   : 	{
; 19   : 		halt("KrnInitializeKernel() returned an error.\r\n");

  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@EKIIKDMP@KrnInitializeKernel?$CI?$CJ?5returned?5a@
  0002a	e8 00 00 00 00	 call	 _halt
  0002f	83 c4 04	 add	 esp, 4
$LN3@leeysos_in:

; 20   : 	}
; 21   : 
; 22   : 	if( !KbdInitializeDriver() )

  00032	e8 00 00 00 00	 call	 _KbdInitializeDriver
  00037	85 c0		 test	 eax, eax
  00039	75 0d		 jne	 SHORT $LN2@leeysos_in

; 23   : 	{
; 24   : 		halt("KbdInitializeDriver() returned an error.\r\n");

  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@BBHNNJJA@KbdInitializeDriver?$CI?$CJ?5returned?5a@
  00040	e8 00 00 00 00	 call	 _halt
  00045	83 c4 04	 add	 esp, 4
$LN2@leeysos_in:

; 25   : 	}
; 26   : 	CrtPrintf("Keyboard Driver is initialized!! ");

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@DFCKDFA@Keyboard?5Driver?5is?5initialized?$CB?$CB@
  0004d	e8 00 00 00 00	 call	 _CrtPrintf
  00052	83 c4 04	 add	 esp, 4

; 27   : 
; 28   : 	if( !FddInitializeDriver() )

  00055	e8 00 00 00 00	 call	 _FddInitializeDriver
  0005a	85 c0		 test	 eax, eax
  0005c	75 0d		 jne	 SHORT $LN1@leeysos_in

; 29   : 	{
; 30   : 		halt("FddInitializeDriver() returned an error.\r\n");

  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@LECLFJDL@FddInitializeDriver?$CI?$CJ?5returned?5a@
  00063	e8 00 00 00 00	 call	 _halt
  00068	83 c4 04	 add	 esp, 4
$LN1@leeysos_in:

; 31   : 	}
; 32   : 	CrtPrintf("Floppy Disk Driver is initialized!!\r\n");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@ENNLIACI@Floppy?5Disk?5Driver?5is?5initialize@
  00070	e8 00 00 00 00	 call	 _CrtPrintf
  00075	83 c4 04	 add	 esp, 4

; 33   : 
; 34   : 	PspCreateUserProcess();		// ☞ 테스트 용 유저 프로세스 생성

  00078	e8 00 00 00 00	 call	 _PspCreateUserProcess

; 35   : 
; 36   : 	_asm
; 37   : 	{
; 38   : 		push	eax

  0007d	50		 push	 eax

; 39   : 		
; 40   : 		pushfd

  0007e	9c		 pushfd

; 41   : 		pop		eax

  0007f	58		 pop	 eax

; 42   : 		or		ah, 40h	; nested

  00080	80 cc 40	 or	 ah, 64			; 00000040H

; 43   : 		push	eax

  00083	50		 push	 eax

; 44   : 		popfd

  00084	9d		 popfd

; 45   : 
; 46   : 		pop		eax

  00085	58		 pop	 eax

; 47   : 		iretd

  00086	cf		 iretd

; 48   : 	}
; 49   : 
; 50   : 	// 만약 초기화 실패 시, 이 부분 실행(전체 시스템 정지)
; 51   : 	halt("Booting Error!\r\n");

  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CINOICC@Booting?5Error?$CB?$AN?6?$AA@
  0008c	e8 00 00 00 00	 call	 _halt
  00091	83 c4 04	 add	 esp, 4

; 52   : 
; 53   : 	return 0;

  00094	33 c0		 xor	 eax, eax

; 54   : }

  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
_leeysos_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BC@GAGKJLIL@Halting?5System?4?$AN?6?$AA@	; `string'
;	COMDAT ??_C@_0BC@GAGKJLIL@Halting?5System?4?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BC@GAGKJLIL@Halting?5System?4?$AN?6?$AA@ DB 'Halting System.', 0dH
	DB	0aH, 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT _halt
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
_halt	PROC						; COMDAT

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 59   : 	if( pMsg != NULL )

  00009	83 7d 08 00	 cmp	 DWORD PTR _pMsg$[ebp], 0
  0000d	74 19		 je	 SHORT $LN2@halt

; 60   : 	{
; 61   : 		DbgPrint(pMsg);

  0000f	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _CrtPrintf
  00018	83 c4 04	 add	 esp, 4

; 62   : 		DbgPrint("Halting System.\r\n");

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GAGKJLIL@Halting?5System?4?$AN?6?$AA@
  00020	e8 00 00 00 00	 call	 _CrtPrintf
  00025	83 c4 04	 add	 esp, 4
$LN2@halt:

; 63   : 	}
; 64   : 
; 65   : 	while( 1 );

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	85 c0		 test	 eax, eax
  0002f	74 02		 je	 SHORT $LN4@halt
  00031	eb f5		 jmp	 SHORT $LN2@halt
$LN4@halt:

; 66   : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
_halt	ENDP
_TEXT	ENDS
END
